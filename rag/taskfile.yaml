version: "3"

tasks:
  tool-server:
    desc: run rag tool server
    dotenv: [".env"]
    cmds:
      - go run -v cmd/tool-server/main.go {{.CLI_ARGS}}

  encode:
    desc: run text encoding
    dotenv: [".env"]
    cmds:
      - go run -v cmd/encode/main.go {{.CLI_ARGS}}

  migrate:
    desc: run DB migration
    cmds:
      - go run -v cmd/migration/main.go {{.CLI_ARGS}}

  put:
    desc: run data uploading
    dotenv: [".env"]
    cmds:
      - go run -v cmd/put/main.go {{.CLI_ARGS}}

  build:
    desc: build RAG service
    cmds:
      - docker compose build

  update-split-schema:
    desc: update splitter openapi
    cmds:
      - curl localhost:9999/openapi.json | jq > schemas/openapi.split.json

  generate-split-schema:
    desc: generate splitter from openapi
    cmds:
      - >
        docker run --rm
        -v ${PWD}:/local
        openapitools/openapi-generator-cli generate
        -i /local/schemas/openapi.split.json
        -g go
        -o /local/generated/split
        --additional-properties=packageName=split

  generate-tools-schema:
    desc: generate echo server for splitter
    cmds:
      - go tool oapi-codegen -config schemas/types.cfg.yaml schemas/openapi.tools.json
      - go tool oapi-codegen -config schemas/server.cfg.yaml schemas/openapi.tools.json
      - go fmt ./generated/ragtools/...

  split-schema:
    desc: generate split schema
    cmds:
      - task: update-split-schema
      - task: generate-split-schema
